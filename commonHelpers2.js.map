{"version":3,"file":"commonHelpers2.js","sources":["../src/js/quote.js","../src/js/footer.js","../src/js/search.js","../src/js/capitalize_word.js","../src/js/pop_up_exercise.js","../src/js/makePagination.js","../src/js/exercises.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst quoteContainer = document.querySelector('.quote__backend');\nconst date = new Date().toLocaleDateString();\n\n// Функція отримання цитати з сервера\nasync function getQuote() {\n    quoteContainer.innerHTML = `\n        <span class=\"loader\"></span>\n        <span>We're looking a quote for you...</span>\n    `;\n    try {\n        const response = await axios.get('https://energyflow.b.goit.study/api/quote')\n        return response.data;\n    }\n    catch (error) {\n        Notify.failure(`Something went wrong, try again`);\n    }\n}\n\n// Створення розмітки\nfunction createMarkup(author, quote) {\n    return `<p class=\"quote__backend-text\">${quote}</p>\n            <p class=\"quote__backend-author\">${author}</p>`;\n}\n\n// Функція рендерингу цитати\nfunction getAndRenderQuote() {\n    if (\n        localStorage.getItem('quote') &&\n        localStorage.getItem('savedDate') === date)\n\n    //  Розмітка із локального сховища\n    {\n        const { author, quote } = JSON.parse(localStorage.getItem('quote'));\n        quoteContainer.innerHTML = createMarkup(author, quote);\n    }\n\n    // Розмітка із бекенду\n    else {\n        getQuote()\n            .then(({ author, quote }) => {\n                const localStorageQuote = {\n                    author,\n                    quote\n                };\n\n                localStorage.setItem('quote', JSON.stringify(localStorageQuote));\n                localStorage.setItem('savedDate', date);\n                quoteContainer.innerHTML = createMarkup(author, quote);\n            })\n            .catch(error => Notify.failure(error.message));\n    }\n\n}\n\ngetAndRenderQuote();","import axios from 'axios';\nconst form = document.getElementById('subscriptionForm');\nconst email = document.getElementById('email');\nconst pattern = new RegExp(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\n\nform.addEventListener('submit', async function (event) {\n    event.preventDefault();\n    try {\n        if (pattern.test(email.value)) {\n            // dsasd@gmail.com\n            await axios.post('https://energyflow.b.goit.study/api/subscription', { email: email.value })\n                .then(response => { console.log(response.data.message) })\n                .catch(error => { console.log(error.response.data.message) });\n        } else {\n            alert('Please enter the correct email');\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert('Something went wrong, try again');\n    }\n});","import axios from \"axios\";\n\n\nconst form = document.getElementById(\"exercises-search-form\");\nconst searchInput = form.querySelector(\".exercises-search-input\");\nconst exercisesList = document.querySelector(\".exercises-list\");\nconst clearButton = document.querySelector('.exercises-inputclear-icon');\n\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n\n  const query = searchInput.value.trim().toLowerCase();\n\n  try {\n    await renderExercises(query);\n  } catch (error) {\n    console.error(error);\n  }\n});\n//  Додаємо обробник події для введення тексту у полі пошуку\nsearchInput.addEventListener('input', handleInputChange);\n\n\n// / Функція для відображення або приховування іконки очищення\nfunction handleInputChange() {\n  const inputValue = searchInput.value.trim();\n  if (inputValue !== '') {\n    clearButton.classList.remove('exercises-is-hidden');\n  } else {\n    clearButton.classList.add('exercises-is-hidden');\n  }\n}\n// / Функція для очищення input \nfunction clearInput() {\n  const searchInput = document.getElementById('exercises-search-input');\n  if (searchInput) {\n    searchInput.value = '';\n  }\n};\n\nclearButton.addEventListener('click', clearInput);\n\nasync function getExercises(query) {\n  try {\n    const response = await axios.get(`https://energyflow.b.goit.study/api/exercises?bodypart=&muscles=abs&equipment=&keyword=${query}&page=1&limit=10`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n    throw error;\n  }\n}\n\nasync function renderExercises(query) {\n  try {\n    const exercises = await getExercises(query);\n\n    exercisesList.innerHTML = '';\n\n    if (exercises.results.length > 0) {\n      const exercisesHTML = exercises.results.map((exercise) => `\n        <li class=\"exercises-item-page2\">\n          <div class=\"exercises-card\">\n            <div class=\"exercises-card-top\">\n              <div class=\"exercises-kind-wrapper\">\n                <p class=\"exercises-card-kind\">WORKOUT</p>\n                <div class=\"exercises-card-rating\">\n                  <p class=\"exercises-rating-value\">${exercise.rating}</p>\n                  <svg class=\"exercises-star-icon\" width=\"18\" height=\"18\" aria-label=\"star icon\">\n                    <use href=\"./img/exercises/exercises-sprite.svg#icon-star\"></use>\n                  </svg>\n                </div>\n              </div>\n              <button class=\"exercises-start-button\">\n                Start\n                <svg class=\"exercises-start-icon\" width=\"14\" height=\"14\">\n                  <use href=\"./img/exercises/exercises-sprite.svg#icon-arrow\"></use>\n                </svg>\n              </button>\n            </div>\n            <div class=\"exercises-card-namewrapper\">\n              <svg class=\"exercises-star-icon\" width=\"24\" height=\"24\" aria-label=\"star icon\">\n                <use href=\"./img/exercises/exercises-sprite.svg#icon-icon\"></use>\n              </svg>\n              <p class=\"exercises-card-exname\">${exercise.name}</p>\n            </div>\n            <ul class=\"exercises-card-info\">\n              <li class=\"exercises-info-data\">\n                <span class=\"exercises-data-name\">Burned calories: </span>${exercise.calories} / ${exercise.duration} min\n              </li>\n              <li class=\"exercises-info-data\">\n                <span class=\"exercises-data-name\">Body part: </span>${exercise.bodyPart}\n              </li>\n              <li class=\"exercises-info-data\">\n                <span class=\"exercises-data-name\">Target: </span>${exercise.target}\n              </li>\n            </ul>\n          </div>\n        </li>\n      `).join('');\n\n      exercisesList.innerHTML = exercisesHTML;\n    } else {\n      exercisesList.innerHTML = '<p class=\"no-results-message\">Unfortunately, <span class=\"error-message\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>';\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n\n}","function capitalize(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nexport { capitalize };","import axios from 'axios';\nimport { capitalize } from './capitalize_word';\n\nexport function assignModal() {\n  // Находим контейнер с классом \"exercises-list\"\n  let container = document.querySelector(\".exercises-list\");\n  // Навешиваем обработчик клика на родительский элемент, делегируем событие детям\n  container.addEventListener(\"click\", async function (event) {\n    let target = event.target;\n    // Проверяем, что кликнули по кнопке \".exercises-start-button\"\n    if (target.classList.contains(\"exercises-start-button\") || target.parentElement.classList.contains(\"exercises-start-button\")) {\n      // Получаем значение ID из атрибута data-id кнопки\n      let exerciseId;\n      if (target.parentElement.classList.contains(\"exercises-start-button\")) {\n        exerciseId = target.parentElement.getAttribute(\"id\");\n      } else {\n        exerciseId = target.getAttribute(\"id\");\n      }\n      async function getInfoByID() {\n        try {\n          await axios.get('https://energyflow.b.goit.study/api/exercises/' + exerciseId)\n            .then(({ data }) => {\n              // Выводим данные на консоль\n              // console.log(data);\n              // Заполняем модальное окно данными\n              document.getElementById(\"modalImage\").src = data.gifUrl;\n              document.getElementById(\"modalName\").textContent = capitalize(data.name);\n              document.getElementById(\"modalRating\").textContent = data.rating;\n              document.getElementById(\"modalTarget\").textContent = capitalize(data.target);\n              document.getElementById(\"bodyPart\").textContent = capitalize(data.bodyPart);\n              document.getElementById(\"modalEquipment\").textContent = capitalize(data.equipment);\n              document.getElementById(\"modalPopularity\").textContent = data.popularity;\n              document.getElementById(\"modalBurnedCalories\").textContent = data.burnedCalories + \" cal / \" + data.time + \" min\";\n              document.getElementById(\"modalDescription\").textContent = data.description;\n              // Открываем модальное окно\n              var modal = document.getElementById(\"pop-up-exercise\");\n              modal.style.display = \"flex\";\n            })\n        }\n        catch (error) {\n          console.error('Error:', error);\n          alert('Something went wrong, try again');\n        }\n      }\n      // Отправляем запрос на сервер с учетом полученного exerciseId\n      await getInfoByID();\n    }\n  });\n\n  // Навешиваем обработчик события на кнопку закрытия модального окна\n  const closeButton = document.getElementById(\"closeBtn\");\n  closeButton.addEventListener(\"click\", function () {\n    const modal = document.getElementById(\"pop-up-exercise\");\n    modal.style.display = \"none\";\n  });\n  // Получение рейтинга с сервера (предположим, что он хранится в переменной rating)\nconst rating = 3;\n\n// Находим все элементы звезд\nconst stars = document.querySelectorAll('.star');\n\n// Отображаем звезды в соответствии с рейтингом\nfor (let i = 0; i < rating; i++) {\n    stars[i].style.fill = 'yellow'; // Желтая звезда для оценки, меньшей, чем рейтинг\n}\n\n}\n\n\nexport function deleteListener(params) {\n\n}","import Pagination from \"tui-pagination\";\nimport 'tui-pagination/dist/tui-pagination.css';\n\nfunction makePagination(perPage, totalPages) {\n\n    const paginationEl = document.getElementById('tui-pagination-container');\n    const visiblePages = totalPages < 5 ? totalPages : 5;\n    const options = {\n        totalItems: perPage * totalPages,\n        itemsPerPage: perPage,\n        visiblePages,\n        centerAlign: true,\n    };\n\n    const pagination = new Pagination(paginationEl, options);\n\n    if (visiblePages <= 1) {\n        paginationEl.style.display = 'none';\n    } else {\n        paginationEl.style.display = 'block';\n    }\n\n    return pagination;\n}\n\nexport { makePagination };","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport axios from 'axios';\nimport { assignModal } from './pop_up_exercise';\nimport { makePagination } from './makePagination';\nimport { capitalize } from './capitalize_word';\nconst exercisesList = document.querySelector('.exercises-list');\nlet activeFilter = 'Muscles';\nlet activePage = 1;\nconst itemsPerPage = 12;\nlet totalPages;\nlet totalPagesforCards;\n// const form = document.getElementById(\"exercises-search-form\");\n// const searchInput = form.querySelector(\".exercises-search-input\");\n// const clearButton = document.querySelector('.exercises-inputclear-icon');\n\nasync function getMusclePage(filter, page) {\n  let searchParams = new URLSearchParams({\n    filter: filter,\n    page: page,\n    limit: itemsPerPage,\n  });\n  try {\n    await axios.get(`https://energyflow.b.goit.study/api/filters?${searchParams}`)\n      .then(response => {\n        let musclesResult = response.data.results;\n        totalPages = response.data.totalPages;\n        // console.log('Total Pages: ', totalPages);\n\n        const markup = musclesResult.map(({ name, filter, imgUrl }) => {\n          return `<li class=\"exercises-list-item\" data-name=\"${name}\" data-filter=\"${filter}\">\n            <div class=\"exercises-item\"\n            style=\"background:\n            linear-gradient(0deg,rgba(16, 16, 16, 0.7) 0%, rgba(16, 16, 16, 0.7) 100%),\n            url(${imgUrl}),lightgray -16.825px -9.156px / 128.765% 116.922% no-repeat; \n            background-size: cover;\">\n            <p class=\"exercises-item-name\">${capitalize(name)}</p>\n            <p class=\"exercises-item-subname\">${filter}</p>\n            </div>\n          </li>`;\n        })\n          .join(\"\");\n        exercisesList.insertAdjacentHTML(\"beforeend\", markup);\n        assignClicktoCards();\n      })\n      .catch(error => { console.log(error.response.data.message) });\n  } catch (error) {\n    console.error('Error:', error);\n    alert('Something went wrong, try again');\n  }\n}\nawait getMusclePage(activeFilter, activePage);\n\nmakePagination(12, totalPages).on('afterMove', ({ page }) => {\n  // console.log('Moved', page);\n  exercisesList.innerHTML = \"\";\n  getMusclePage(activeFilter, page);\n});\n\nfunction assignClicktoCards() {\n  let page = activePage;\n  const cards = document.querySelectorAll(\".exercises-list-item\");\n  for (const card of cards) {\n    card.addEventListener(\"click\", async function (event) {\n      const name = event.currentTarget.dataset.name\n      const filter = event.currentTarget.dataset.filter\n      // setDisplayCards(false)\n      await getExercises({ filter, name, page });\n\n      makePagination(10, totalPagesforCards).on('afterMove', async ({ page }) => {\n        exercisesList.innerHTML = \"\";\n        await getExercises({ filter, name, page });\n      });\n    });\n  }\n}\n\n\nconst actionButtons = document.querySelectorAll(\".exercises-filter-button\");\nfor (const card of actionButtons) {\n  card.classList.remove(\"foo\");\n  card.addEventListener(\"click\", async function (event) {\n    const name = event.currentTarget.dataset.name;\n    event.currentTarget.classList.add(\"foo\");\n    console.dir(event.currentTarget.classList);\n\n    activeFilter = name;\n    console.log('Clicked the button: ', name);\n    exercisesList.innerHTML = \"\";\n    await getMusclePage(name, activePage);\n    makePagination(12, totalPages).on('afterMove', ({ page }) => {\n      console.log('Moved', page);\n      console.log('Total Pages Pressed', totalPages);\n      exercisesList.innerHTML = \"\";\n      getMusclePage(activeFilter, page);\n    });\n    console.log(name, activePage);\n  });\n}\n\n\n\n\n// form.addEventListener(\"submit\", async (event) => {\n//   event.preventDefault();\n\n//   const query = searchInput.value.trim().toLowerCase();\n\n//   try {\n//     // await getExercises({ \"bodypart\"});\n//   } catch (error) {\n//     console.error(error);\n//   }\n// });\n\nasync function getExercises({ filter, name, page }) {\n  const filterParamMap = {\n    'Body parts': 'bodypart',\n    'Muscles': 'muscles',\n    'Equipment': 'equipment'\n  };\n  const filterParam = filterParamMap[filter];\n\n  await axios.get(`https://energyflow.b.goit.study/api/exercises?${filterParam}=${name.toLowerCase()}&page=${page}&limit${itemsPerPage}`)\n    .then(response => {\n      let musclesResult = response.data.results;\n      totalPagesforCards = response.data.totalPages;\n      console.log(\"totalPagesforCards\", totalPagesforCards, \"musclesResult:\", response.data);\n      // console.log(totalPages, response.data);\n      const markup = musclesResult.map(({ bodyPart, burnedCalories, name, _id, target, rating }) => {\n        return `<li class=\"exercises-item-page2\">\n            <div class=\"exercises-card\">\n              <div class=\"exercises-card-top\">\n                <div class=\"exercises-kind-wrapper\">\n                  <p class=\"exercises-card-kind\">WORKOUT</p>\n                  <div class=\"exercises-card-rating\">\n                    <p class=\"exercises-rating-value\">${rating}</p>\n                    <svg\n                      class=\"exercises-star-icon\"\n                      width=\"18\"\n                      height=\"18\"\n                      aria-label=\"star icon\"\n                    >\n                      <use\n                        href=\"./img/exercises/exercises-sprite.svg#icon-star\"\n                      ></use>\n                    </svg>\n                  </div>\n                </div>\n                <button class=\"exercises-start-button\" id=${_id}>\n                  Start\n                  <svg class=\"exercises-start-icon\" width=\"14\" height=\"14\">\n                    <use\n                      href=\"./img/exercises/exercises-sprite.svg#icon-arrow\"\n                    ></use>\n                  </svg>\n                </button>\n              </div>\n              <div class=\"exercises-card-namewrapper\">\n                <svg\n                  class=\"exercises-star-icon\"\n                  width=\"24\"\n                  height=\"24\"\n                  aria-label=\"star icon\"\n                >\n                  <use\n                    href=\"./img/exercises/exercises-sprite.svg#icon-icon\"\n                  ></use>\n                </svg>\n                <p class=\"exercises-card-exname\">${capitalize(name)}</p>\n              </div>\n              <ul class=\"exercises-card-info\">\n                <li class=\"exercises-info-data\">\n                  <span class=\"exercises-data-name\">Burned calories: </span>${burnedCalories}\n                </li>\n                <li class=\"exercises-info-data\">\n                  <span class=\"exercises-data-name\">Body part: </span>${capitalize(bodyPart)}\n                </li>\n                <li class=\"exercises-info-data\">\n                  <span class=\"exercises-data-name\">Target: </span>${capitalize(target)}\n                </li>\n              </ul>\n            </div>\n          </li> `;\n      })\n        .join(\"\");\n      exercisesList.innerHTML = \"\";\n      exercisesList.insertAdjacentHTML(\"beforeend\", markup);\n      assignModal();\n\n    })\n    .catch(error => { console.log(error.response.data.message) });\n}\n\n\n//Эту функцию я не использую\nfunction getExercisesPage({ filter, name, page }) {\n  const filterParamMap = {\n    'Body parts': 'bodypart',\n    'Muscles': 'muscles',\n    'Equipment': 'equipment'\n  };\n  const filterParam = filterParamMap[filter];\n\n  axios.get(`https://energyflow.b.goit.study/api/exercises?${filterParam}=${name.toLowerCase()}&page=${page}&limit${itemsPerPage}`)\n    .then(response => {\n      let musclesResult = response.data.results;\n      let { totalPages } = response.data;\n      const markup = musclesResult.map(({ name, filter, imgUrl }) => {\n        return `<li class=\"exercises-list-item\" data-name=\"${name}\" data-filter=\"${filter}\">\n            <div class=\"exercises-item\"\n            style=\"background:\n            linear-gradient(0deg,rgba(16, 16, 16, 0.7) 0%, rgba(16, 16, 16, 0.7) 100%),\n            url(${imgUrl}),lightgray -16.825px -9.156px / 128.765% 116.922% no-repeat; \n            background-size: cover;\">\n            <p class=\"exercises-item-name\">${capitalize(name)}</p>\n            <p class=\"exercises-item-subname\">${filter}</p>\n            </div>\n          </li>`;\n      })\n        .join(\"\");\n      exercisesList.innerHTML = \"\";\n      exercisesList.insertAdjacentHTML(\"beforeend\", markup);\n    })\n    .catch(error => {\n      console.error('Error while fetching exercises:', error);\n    });\n}"],"names":["quoteContainer","date","getQuote","axios","Notify","createMarkup","author","quote","getAndRenderQuote","localStorageQuote","error","form","email","pattern","event","response","searchInput","exercisesList","clearButton","query","renderExercises","handleInputChange","clearInput","getExercises","exercises","exercisesHTML","exercise","capitalize","word","assignModal","target","exerciseId","getInfoByID","data","modal","rating","stars","i","makePagination","perPage","totalPages","paginationEl","visiblePages","options","pagination","Pagination","activeFilter","activePage","itemsPerPage","totalPagesforCards","getMusclePage","filter","page","searchParams","musclesResult","markup","name","imgUrl","assignClicktoCards","cards","card","actionButtons","filterParam","bodyPart","burnedCalories","_id"],"mappings":"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"}