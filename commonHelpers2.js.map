{"version":3,"file":"commonHelpers2.js","sources":["../src/js/quote.js","../src/js/footer.js","../src/js/search.js","../src/js/pop_up_exercise.js","../src/js/makePagination.js","../src/js/capitalize_word.js","../src/js/exercises.js","../src/js/scroll.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst quoteContainer = document.querySelector('.quote__backend');\nconst date = new Date().toLocaleDateString();\n\n// Функція отримання цитати з сервера\nasync function getQuote() {\n    quoteContainer.innerHTML = `\n        <span class=\"loader\"></span>\n        <span>We're looking a quote for you...</span>\n    `;\n    try {\n        const response = await axios.get('https://energyflow.b.goit.study/api/quote')\n        return response.data;\n    }\n    catch (error) {\n        Notify.failure(`Something went wrong, try again`);\n    }\n}\n\n// Створення розмітки\nfunction createMarkup(author, quote) {\n    return `<p class=\"quote__backend-text\">${quote}</p>\n            <p class=\"quote__backend-author\">${author}</p>`;\n}\n\n// Функція рендерингу цитати\nfunction getAndRenderQuote() {\n    if (\n        localStorage.getItem('quote') &&\n        localStorage.getItem('savedDate') === date)\n\n    //  Розмітка із локального сховища\n    {\n        const { author, quote } = JSON.parse(localStorage.getItem('quote'));\n        quoteContainer.innerHTML = createMarkup(author, quote);\n    }\n\n    // Розмітка із бекенду\n    else {\n        getQuote()\n            .then(({ author, quote }) => {\n                const localStorageQuote = {\n                    author,\n                    quote\n                };\n\n                localStorage.setItem('quote', JSON.stringify(localStorageQuote));\n                localStorage.setItem('savedDate', date);\n                quoteContainer.innerHTML = createMarkup(author, quote);\n            })\n            .catch(error => Notify.failure(error.message));\n    }\n\n}\n\ngetAndRenderQuote();","import axios from 'axios';\nconst form = document.getElementById('subscriptionForm');\nconst email = document.getElementById('email');\nconst pattern = new RegExp(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\n\nform.addEventListener('submit', async function (event) {\n    event.preventDefault();\n    try {\n        if (pattern.test(email.value)) {\n            // dsasd@gmail.com\n            await axios.post('https://energyflow.b.goit.study/api/subscription', { email: email.value })\n                .then(response => { console.log(response.data.message) })\n                .catch(error => { console.log(error.response.data.message) });\n        } else {\n            alert('Please enter the correct email');\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert('Something went wrong, try again');\n    }\n});","import axios from \"axios\";\n\n\nconst form = document.getElementById(\"exercises-search-form\");\nconst searchInput = form.querySelector(\".exercises-search-input\");\nconst exercisesList = document.querySelector(\".exercises-list-page2\");\nconst clearButton = document.querySelector('.exercises-inputclear-icon');\n\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n\n  const query = searchInput.value.trim().toLowerCase();\n\n  try {\n    await renderExercises(query);\n  } catch (error) {\n    console.error(error);\n  }\n});\n//  Додаємо обробник події для введення тексту у полі пошуку\nsearchInput.addEventListener('input', handleInputChange);\n\n\n// / Функція для відображення або приховування іконки очищення\nfunction handleInputChange() {\n  const inputValue = searchInput.value.trim();\n  if (inputValue !== '') {\n    clearButton.classList.remove('exercises-is-hidden');\n  } else {\n    clearButton.classList.add('exercises-is-hidden');\n  }\n}\n// / Функція для очищення input \n  function clearInput() {\n  const searchInput = document.getElementById('exercises-search-input');\n  if (searchInput) {\n    searchInput.value = '';\n  }\n  };\n\n  clearButton.addEventListener('click', clearInput);\n\nasync function getExercises(query) {\n  try {\n    const response = await axios.get(`https://energyflow.b.goit.study/api/exercises?bodypart=back&muscles=lats&equipment=barbell&keyword=${query}&page=1&limit=10`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n    throw error;\n  }\n}\n\nasync function renderExercises(query) {\n  try {\n    const exercises = await getExercises(query);\n\n    exercisesList.innerHTML = '';\n\n    if (exercises.results.length > 0) {\n      const exercisesHTML = exercises.results.map((exercise) => `\n        <li class=\"exercises-item-page2\">\n          <div class=\"exercises-card\">\n            <div class=\"exercises-card-top\">\n              <div class=\"exercises-kind-wrapper\">\n                <p class=\"exercises-card-kind\">WORKOUT</p>\n                <div class=\"exercises-card-rating\">\n                  <p class=\"exercises-rating-value\">${exercise.rating}</p>\n                  <svg class=\"exercises-star-icon\" width=\"18\" height=\"18\" aria-label=\"star icon\">\n                    <use href=\"./img/exercises/exercises-sprite.svg#icon-star\"></use>\n                  </svg>\n                </div>\n              </div>\n              <button class=\"exercises-start-button\">\n                Start\n                <svg class=\"exercises-start-icon\" width=\"14\" height=\"14\">\n                  <use href=\"./img/exercises/exercises-sprite.svg#icon-arrow\"></use>\n                </svg>\n              </button>\n            </div>\n            <div class=\"exercises-card-namewrapper\">\n              <svg class=\"exercises-star-icon\" width=\"24\" height=\"24\" aria-label=\"star icon\">\n                <use href=\"./img/exercises/exercises-sprite.svg#icon-icon\"></use>\n              </svg>\n              <p class=\"exercises-card-exname\">${exercise.name}</p>\n            </div>\n            <ul class=\"exercises-card-info\">\n              <li class=\"exercises-info-data\">\n                <span class=\"exercises-data-name\">Burned calories: </span>${exercise.calories} / ${exercise.duration} min\n              </li>\n              <li class=\"exercises-info-data\">\n                <span class=\"exercises-data-name\">Body part: </span>${exercise.bodyPart}\n              </li>\n              <li class=\"exercises-info-data\">\n                <span class=\"exercises-data-name\">Target: </span>${exercise.target}\n              </li>\n            </ul>\n          </div>\n        </li>\n      `).join('');\n\n      exercisesList.innerHTML = exercisesHTML;\n    } else {\n      exercisesList.innerHTML = '<p class=\"no-results-message\">Unfortunately, <span class=\"error-message\">no results</span> were found. You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>';\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  \n}","document.addEventListener(\"DOMContentLoaded\", function () {\n  // Находим контейнер с классом \"exercises-list\"\n  var container = document.querySelector(\".exercises-list\");\n\n  // Навешиваем обработчик клика на родительский элемент, делегируем событие детям\n  container.addEventListener(\"click\", function(event) {\n    var target = event.target;\n\n    // Проверяем, что кликнули по кнопке \".exercises-start-button\"\n    if (target.classList.contains(\"exercises-start-button\")) {\n      // Получаем значение ID из атрибута data-id кнопки\n      var exerciseId = target.getAttribute(\"data-id\");\n\n      \n\n      // Отправляем запрос на сервер с учетом полученного exerciseId\n      fetch('https://energyflow.b.goit.study/api/exercises/?id=' + exerciseId)\n        .then(response => {\n          \n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          // Выводим данные на консоль\n          console.log(data);\n\n          // Заполняем модальное окно данными\n          document.getElementById(\"modalTitle\").textContent = data.name;\n          document.getElementById(\"modalImage\").src = data.gifUrl;\n          document.getElementById(\"modalName\").textContent = data.name;\n          document.getElementById(\"modalRating\").textContent = data.rating;\n          document.getElementById(\"modalTarget\").textContent = data.bodyPart;\n          document.getElementById(\"modalEquipment\").textContent = data.equipment;\n          document.getElementById(\"modalPopularity\").textContent = data.popularity;\n          document.getElementById(\"modalBurnedCalories\").textContent = data.burnedCalories + \" cal / \" + data.time + \" min\";\n          document.getElementById(\"modalDescription\").textContent = data.description;\n\n          // Открываем модальное окно\n          var modal = document.getElementById(\"pop-up-exercise\");\n          modal.style.display = \"flex\";\n        })\n        .catch(error => {\n          console.error('There was a problem with your fetch operation:', error);\n        });\n    }\n  });\n\n  // Навешиваем обработчик события на кнопку закрытия модального окна\n  var closeButton = document.getElementById(\"closeBtn\");\n  closeButton.addEventListener(\"click\", function() {\n    var modal = document.getElementById(\"pop-up-exercise\");\n    modal.style.display = \"none\";\n  });\n});\n\n\n","import Pagination from \"tui-pagination\";\nimport 'tui-pagination/dist/tui-pagination.css';\n\nfunction makePagination(perPage, totalPages) {\n\n    const paginationEl = document.getElementById('tui-pagination-container');\n    const visiblePages = totalPages < 5 ? totalPages : 5;\n    const options = {\n        totalItems: perPage * totalPages,\n        itemsPerPage: perPage,\n        visiblePages,\n        centerAlign: true,\n    };\n\n    const pagination = new Pagination(paginationEl, options);\n\n    if (visiblePages <= 1) {\n        paginationEl.style.display = 'none';\n    } else {\n        paginationEl.style.display = 'block';\n    }\n\n    return pagination;\n}\n\nfunction makePaginationByItems(perPage, totalItems) {\n    const totalPages = totalItems / perPage + 1;\n\n\n    const paginationEl = document.getElementById('tui-pagination-container');\n    const visiblePages = totalPages < 5 ? totalPages : 5;\n    const options = {\n        totalItems,\n        itemsPerPage: perPage,\n        visiblePages,\n        centerAlign: true,\n    };\n\n    const pagination = new Pagination(paginationEl, options);\n\n    if (visiblePages <= 1) {\n        paginationEl.style.display = 'none';\n    } else {\n        paginationEl.style.display = 'block';\n    }\n\n    return pagination;\n}\n\nexport { makePagination, makePaginationByItems };","function capitalize(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nexport { capitalize };","import Pagination from 'tui-pagination';\nimport axios from 'axios';\nimport { makePagination, makePaginationByItems } from './makePagination';\nimport { capitalize } from './capitalize_word';\nconst exercisesList = document.querySelector('.exercises-list');\nconst pagination = document.querySelector('.exercises-bottom-buttons');\nconst filterParamMap = {\n  'Body parts': 'bodypart',\n  'Muscles': 'muscles',\n  'Equipment': 'equipment'\n};\nlet activeFilter = 'Muscles';\nlet activeCategory = 'Muscles';\nlet activePage = 1;\nconst itemsPerPage = 12;\nconst filterParams = {\n  filter: activeFilter,\n  category: activeCategory,\n  keyword: '',\n};\nlet paginationMark;\nlet totalPages;\n\n\nasync function getMusclePage(filter, page) {\n  let searchParams = new URLSearchParams({\n    filter: filter,\n    page: page,\n    limit: itemsPerPage,\n  });\n  try {\n    await axios.get(`https://energyflow.b.goit.study/api/filters?${searchParams}`)\n      .then(response => {\n        let musclesResult = response.data.results;\n        totalPages = response.data.totalPages;\n        console.log('Total Pages: ', totalPages);\n\n        const markup = musclesResult.map(({ name, filter, imgUrl }) => {\n          return `<li class=\"exercises-list-item\" data-name=\"${name}\" data-filter=\"${filter}\">\n            <div class=\"exercises-item\"\n            style=\"background:\n            linear-gradient(0deg,rgba(16, 16, 16, 0.7) 0%, rgba(16, 16, 16, 0.7) 100%),\n            url(${imgUrl}),lightgray -16.825px -9.156px / 128.765% 116.922% no-repeat; \n            background-size: cover;\">\n            <p class=\"exercises-item-name\">${capitalize(name)}</p>\n            <p class=\"exercises-item-subname\">${filter}</p>\n            </div>\n          </li>`;\n        })\n          .join(\"\");\n        exercisesList.insertAdjacentHTML(\"beforeend\", markup);\n        assignClicktoCards();\n      })\n      .catch(error => { console.log(error.response.data.message) });\n  } catch (error) {\n    console.error('Error:', error);\n    alert('Something went wrong, try again');\n  }\n}\nawait getMusclePage(activeFilter, activePage);\n\nmakePagination(12, totalPages).on('afterMove', ({ page }) => {\n  console.log('Moved', page);\n  exercisesList.innerHTML = \"\";\n  getMusclePage(activeFilter, page);\n});\n// paginationMark.on('afterMove', async ({ page }) => {\n//   console.log('Moved', page);\n//   exercisesList.innerHTML = \"\";\n//   await getMusclePage(page);\n// });\n\n\nfunction assignClicktoCards() {\n  const cards = document.querySelectorAll(\".exercises-list-item\");\n  for (const card of cards) {\n    card.addEventListener(\"click\", function (event) {\n      const name = event.currentTarget.dataset.name\n      const filter = event.currentTarget.dataset.filter\n      // setDisplayCards(false)\n      getExercises({ filter, name });\n      // currentExerciseContainer.innerHTML = `<p class=\"current-exercises\"><span class= \"slash\">/</span>${capitalize(name)}</p>`\n      console.log(\"Clicked: \", capitalize(name), filter);\n    });\n  }\n}\n\n\nconst actionButtons = document.querySelectorAll(\".exercises-filter-button\");\nfor (const card of actionButtons) {\n  card.addEventListener(\"click\", async function (event) {\n    const name = event.currentTarget.dataset.name;\n    activeFilter = name;\n    console.log('Clicked the button: ', name);\n    exercisesList.innerHTML = \"\";\n    await getMusclePage(name, activePage);\n    makePagination(12, totalPages).on('afterMove', ({ page }) => {\n      console.log('Moved', page);\n      console.log('Total Pages Pressed', totalPages);\n\n      exercisesList.innerHTML = \"\";\n      getMusclePage(activeFilter, page);\n    });\n\n    console.log(name, activePage);\n\n  });\n}\n\n\nfunction getExercises({ filter, name }) {\n  const filterParamMap = {\n    'Body parts': 'bodypart',\n    'Muscles': 'muscles',\n    'Equipment': 'equipment'\n  };\n  const filterParam = filterParamMap[filter];\n  // console.log(filterParam);\n  let searchParams = new URLSearchParams({\n    muscles: name,\n    page: 1,\n    limit: 9,\n  });\n  axios.get(`https://energyflow.b.goit.study/api/exercises?${filterParam}=${name.toLowerCase()}&page=${activePage}&limit${itemsPerPage}`)\n    .then(response => {\n      let musclesResult = response.data.results;\n      console.log(musclesResult);\n      // console.log(totalPages, response.data);\n      const markup = musclesResult.map(({ bodyPart, burnedCalories, name, _id, target, rating }) => {\n        return `<li class=\"exercises-item-page2\">\n            <div class=\"exercises-card\">\n              <div class=\"exercises-card-top\">\n                <div class=\"exercises-kind-wrapper\">\n                  <p class=\"exercises-card-kind\">WORKOUT</p>\n                  <div class=\"exercises-card-rating\">\n                    <p class=\"exercises-rating-value\">${rating}</p>\n                    <svg\n                      class=\"exercises-star-icon\"\n                      width=\"18\"\n                      height=\"18\"\n                      aria-label=\"star icon\"\n                    >\n                      <use\n                        href=\"./img/exercises/exercises-sprite.svg#icon-star\"\n                      ></use>\n                    </svg>\n                  </div>\n                </div>\n                <button class=\"exercises-start-button\" id=${_id}>\n                  Start\n                  <svg class=\"exercises-start-icon\" width=\"14\" height=\"14\">\n                    <use\n                      href=\"./img/exercises/exercises-sprite.svg#icon-arrow\"\n                    ></use>\n                  </svg>\n                </button>\n              </div>\n              <div class=\"exercises-card-namewrapper\">\n                <svg\n                  class=\"exercises-star-icon\"\n                  width=\"24\"\n                  height=\"24\"\n                  aria-label=\"star icon\"\n                >\n                  <use\n                    href=\"./img/exercises/exercises-sprite.svg#icon-icon\"\n                  ></use>\n                </svg>\n                <p class=\"exercises-card-exname\">${capitalize(name)}</p>\n              </div>\n              <ul class=\"exercises-card-info\">\n                <li class=\"exercises-info-data\">\n                  <span class=\"exercises-data-name\">Burned calories: </span>${burnedCalories}\n                </li>\n                <li class=\"exercises-info-data\">\n                  <span class=\"exercises-data-name\">Body part: </span>${capitalize(bodyPart)}\n                </li>\n                <li class=\"exercises-info-data\">\n                  <span class=\"exercises-data-name\">Target: </span>${capitalize(target)}\n                </li>\n              </ul>\n            </div>\n          </li> `;\n      })\n        .join(\"\");\n      exercisesList.innerHTML = \"\";\n      exercisesList.insertAdjacentHTML(\"beforeend\", markup);\n    })\n    .catch(error => { console.log(error.response.data.message) });\n}\n\nfunction getExercisesPage({ filter, name, page }) {\n  const filterParamMap = {\n    'Body parts': 'bodypart',\n    'Muscles': 'muscles',\n    'Equipment': 'equipment'\n  };\n  const filterParam = filterParamMap[filter];\n\n  axios.get(`https://energyflow.b.goit.study/api/exercises?${filterParam}=${name.toLowerCase()}&page=${page}&limit${itemsPerPage}`)\n    .then(response => {\n      let musclesResult = response.data.results;\n      let { totalPages } = response.data;\n      const markup = musclesResult.map(({ name, filter, imgUrl }) => {\n        return `<li class=\"exercises-list-item\" data-name=\"${name}\" data-filter=\"${filter}\">\n            <div class=\"exercises-item\"\n            style=\"background:\n            linear-gradient(0deg,rgba(16, 16, 16, 0.7) 0%, rgba(16, 16, 16, 0.7) 100%),\n            url(${imgUrl}),lightgray -16.825px -9.156px / 128.765% 116.922% no-repeat; \n            background-size: cover;\">\n            <p class=\"exercises-item-name\">${capitalize(name)}</p>\n            <p class=\"exercises-item-subname\">${filter}</p>\n            </div>\n          </li>`;\n      })\n        .join(\"\");\n      exercisesList.innerHTML = \"\";\n      exercisesList.insertAdjacentHTML(\"beforeend\", markup);\n    })\n    .catch(error => {\n      console.error('Error while fetching exercises:', error);\n    });\n}","document.addEventListener(\"DOMContentLoaded\", function() {\n    const scrollTopBtn = document.getElementById(\"scrollTop\");\n\n    function scrollToTop() {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    scrollTopBtn.addEventListener(\"click\", scrollToTop);\n});\n"],"names":["quoteContainer","date","getQuote","axios","Notify","createMarkup","author","quote","getAndRenderQuote","localStorageQuote","error","form","email","pattern","event","response","searchInput","exercisesList","clearButton","query","renderExercises","handleInputChange","clearInput","getExercises","exercises","exercisesHTML","exercise","container","target","exerciseId","data","modal","closeButton","makePagination","perPage","totalPages","paginationEl","visiblePages","options","pagination","Pagination","capitalize","word","activeFilter","activePage","itemsPerPage","getMusclePage","filter","page","searchParams","musclesResult","markup","name","imgUrl","assignClicktoCards","cards","card","actionButtons","filterParam","bodyPart","burnedCalories","_id","rating","scrollTopBtn","scrollToTop"],"mappings":"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"}